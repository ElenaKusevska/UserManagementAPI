Implement error handling for:

Non-existent user IDs (return 404 if not found) - Django returns a 404 when id not found by default

Invalid input data (return meaningful error messages). - One option is to write a custom method
to validate the rquest data in the UserViewSet class and create a custom exception class that inherits
from the APIException class. For example, in myproject/users/views.py for POST requests
I am checking if the password length is too short, and raising an exception defined in /myproject/myproject/utils/py

Additional:
Pagination: Add pagination to the GET /users/ endpoint - using StandardResultsSetPagination

Search and Filtering: Implement filtering to search users by name or email using query parameters (GET /users/?search=<term>).
Testing: Add unit tests for two of the API endpoints using Django's test framework